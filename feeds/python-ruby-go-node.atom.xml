<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>startover's blog</title><link href="http://startover.github.io/" rel="alternate"></link><link href="http://startover.github.io/feeds/python-ruby-go-node.atom.xml" rel="self"></link><id>http://startover.github.io/</id><updated>2016-03-15T14:21:00+08:00</updated><entry><title>Python Flask vs Ruby Sinatra vs Go Martini vs Node Express</title><link href="http://startover.github.io/articles/2016/03/15/python-ruby-go-node-benchmark/" rel="alternate"></link><updated>2016-03-15T14:21:00+08:00</updated><author><name>startover</name></author><id>tag:startover.github.io,2016-03-15:articles/2016/03/15/python-ruby-go-node-benchmark/</id><summary type="html">&lt;p&gt;题外话一：&lt;br /&gt;
最近一段时间，Cloud Insight接连发布了三种语言（Python, Node, Ruby）的SDK，Cloud Insight Agent也迎来了重大突破，发布了Windows监控第一个版本，总算可以松口气写点东西了~&lt;/p&gt;
&lt;p&gt;题外话二：&lt;br /&gt;
偶然的机会看到一篇&lt;a href="https://realpython.com/blog/python/python-ruby-and-golang-a-web-Service-application-comparison/"&gt;blog&lt;/a&gt;，文中详细的介绍了&lt;a href="https://github.com/mitsuhiko/flask"&gt;Flask&lt;/a&gt;(Python), &lt;a href="https://github.com/sinatra/sinatra"&gt;Sinatra&lt;/a&gt;(Ruby)以及 &lt;a href="https://github.com/go-martini/martini"&gt;Matini&lt;/a&gt;(Golang)这三类微型框架的用法，并提供了各个框架在Docker下的部署方式。然而，美中不足的是没有提供各个框架的性能对比情况，经过一番搜罗，发现了一篇对现今主流框架做性能对比的&lt;a href="https://medium.com/@tschundeee/express-vs-flask-vs-go-acc0879c2122#.vticwh9tn"&gt;文章&lt;/a&gt;，找到两者的结合点，于是才有了今天这篇文章~&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;回归正题，之所以选择&lt;a href="https://github.com/mitsuhiko/flask"&gt;Flask&lt;/a&gt;(Python), &lt;a href="https://github.com/sinatra/sinatra"&gt;Sinatra&lt;/a&gt;(Ruby),  &lt;a href="https://github.com/go-martini/martini"&gt;Matini&lt;/a&gt;(Golang)和&lt;a href="https://github.com/expressjs/express"&gt;Express&lt;/a&gt;(Node)，主要是经验所限以及个人比较喜欢这类微型框架，下面我们就对各个框架在同等条件下的性能表现一探究竟。&lt;/p&gt;
&lt;p&gt;本文源码地址：&lt;a href="https://github.com/startover/fibonacci-webapp-benchmark"&gt;https://github.com/startover/fibonacci-webapp-benchmark&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;环境准备：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;安装文档：&lt;a href="https://docs.docker.com/engine/installation/"&gt;https://docs.docker.com/engine/installation/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;a href="https://httpd.apache.org/docs/2.4/programs/ab.html"&gt;ab&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;CentOS/Redhat:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum install httpd-tools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu/Debian:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get install apache2-utils&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;启动容器&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com:startover&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webapp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;benchmark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webapp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;benchmark&lt;/span&gt;
&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="err"&gt;./&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;compose&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
&lt;span class="n"&gt;Recreating&lt;/span&gt; &lt;span class="n"&gt;fibonacciwebappbenchmark_python_1&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Recreating&lt;/span&gt; &lt;span class="n"&gt;fibonacciwebappbenchmark_go_1&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Recreating&lt;/span&gt; &lt;span class="n"&gt;fibonacciwebappbenchmark_ruby_1&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Recreating&lt;/span&gt; &lt;span class="n"&gt;fibonacciwebappbenchmark_node_1&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;
&lt;span class="n"&gt;CONTAINER&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt;        &lt;span class="n"&gt;IMAGE&lt;/span&gt;                             &lt;span class="n"&gt;COMMAND&lt;/span&gt;                  &lt;span class="n"&gt;CREATED&lt;/span&gt;             &lt;span class="n"&gt;STATUS&lt;/span&gt;              &lt;span class="n"&gt;PORTS&lt;/span&gt;                    &lt;span class="n"&gt;NAMES&lt;/span&gt;
&lt;span class="mf"&gt;14e0&lt;/span&gt;&lt;span class="n"&gt;d2388dca&lt;/span&gt;        &lt;span class="n"&gt;fibonacciwebappbenchmark_node&lt;/span&gt;     &lt;span class="s"&gt;&amp;quot;npm start&amp;quot;&lt;/span&gt;              &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;       &lt;span class="n"&gt;Up&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;        &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;   &lt;span class="n"&gt;fibonacciwebappbenchmark_node_1&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;b1bdd070f83&lt;/span&gt;        &lt;span class="n"&gt;fibonacciwebappbenchmark_ruby&lt;/span&gt;     &lt;span class="s"&gt;&amp;quot;bundle exec ruby sin&amp;quot;&lt;/span&gt;   &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;      &lt;span class="n"&gt;Up&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;       &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4567&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;4567&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;   &lt;span class="n"&gt;fibonacciwebappbenchmark_ruby_1&lt;/span&gt;
&lt;span class="mi"&gt;333360123&lt;/span&gt;&lt;span class="n"&gt;b56&lt;/span&gt;        &lt;span class="n"&gt;fibonacciwebappbenchmark_go&lt;/span&gt;       &lt;span class="s"&gt;&amp;quot;go run martini.go&amp;quot;&lt;/span&gt;      &lt;span class="mi"&gt;34&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;      &lt;span class="n"&gt;Up&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;       &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;   &lt;span class="n"&gt;fibonacciwebappbenchmark_go_1&lt;/span&gt;
&lt;span class="n"&gt;df50829f511b&lt;/span&gt;        &lt;span class="n"&gt;fibonacciwebappbenchmark_python&lt;/span&gt;   &lt;span class="s"&gt;&amp;quot;python app.py&amp;quot;&lt;/span&gt;          &lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="n"&gt;ago&lt;/span&gt;      &lt;span class="n"&gt;Up&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;       &lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;   &lt;span class="n"&gt;fibonacciwebappbenchmark_python_1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;性能测试（请求数10w，并发100）&lt;/h2&gt;
&lt;h4&gt;Python + Flask&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;http:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost:5000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Concurrency&lt;/span&gt; &lt;span class="n"&gt;Level:&lt;/span&gt;      &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;taken&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tests:&lt;/span&gt;   &lt;span class="mf"&gt;168.322&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;
&lt;span class="n"&gt;Complete&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;      &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Write&lt;/span&gt; &lt;span class="n"&gt;errors:&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;      &lt;span class="mi"&gt;18400000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;HTML&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;       &lt;span class="mi"&gt;2900000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;Requests&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;second:&lt;/span&gt;    &lt;span class="mf"&gt;594.10&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;168.322&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;1.683&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;concurrent&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;rate:&lt;/span&gt;          &lt;span class="mf"&gt;106.75&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Kbytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;

&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Times&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="n"&gt;min&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;+/-&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;   &lt;span class="n"&gt;max&lt;/span&gt;
&lt;span class="n"&gt;Connect:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.3&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="n"&gt;Processing:&lt;/span&gt;    &lt;span class="mi"&gt;21&lt;/span&gt;  &lt;span class="mi"&gt;168&lt;/span&gt;  &lt;span class="mf"&gt;15.3&lt;/span&gt;    &lt;span class="mi"&gt;166&lt;/span&gt;     &lt;span class="mi"&gt;295&lt;/span&gt;
&lt;span class="n"&gt;Waiting:&lt;/span&gt;       &lt;span class="mi"&gt;13&lt;/span&gt;  &lt;span class="mi"&gt;167&lt;/span&gt;  &lt;span class="mf"&gt;15.1&lt;/span&gt;    &lt;span class="mi"&gt;165&lt;/span&gt;     &lt;span class="mi"&gt;286&lt;/span&gt;
&lt;span class="n"&gt;Total:&lt;/span&gt;         &lt;span class="mi"&gt;26&lt;/span&gt;  &lt;span class="mi"&gt;168&lt;/span&gt;  &lt;span class="mf"&gt;15.3&lt;/span&gt;    &lt;span class="mi"&gt;166&lt;/span&gt;     &lt;span class="mi"&gt;295&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Ruby + Sinatra&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;http:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost:4567&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Concurrency&lt;/span&gt; &lt;span class="n"&gt;Level:&lt;/span&gt;      &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;taken&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tests:&lt;/span&gt;   &lt;span class="mf"&gt;496.401&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;
&lt;span class="n"&gt;Complete&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;      &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Write&lt;/span&gt; &lt;span class="n"&gt;errors:&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;      &lt;span class="mi"&gt;30700000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;HTML&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;       &lt;span class="mi"&gt;3000000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;Requests&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;second:&lt;/span&gt;    &lt;span class="mf"&gt;201.45&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;496.401&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;4.964&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;concurrent&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;rate:&lt;/span&gt;          &lt;span class="mf"&gt;60.40&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Kbytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;

&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Times&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="n"&gt;min&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;+/-&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;   &lt;span class="n"&gt;max&lt;/span&gt;
&lt;span class="n"&gt;Connect:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.3&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="n"&gt;Processing:&lt;/span&gt;   &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mi"&gt;493&lt;/span&gt; &lt;span class="mf"&gt;522.3&lt;/span&gt;    &lt;span class="mi"&gt;412&lt;/span&gt;   &lt;span class="mi"&gt;10507&lt;/span&gt;
&lt;span class="n"&gt;Waiting:&lt;/span&gt;      &lt;span class="mi"&gt;177&lt;/span&gt;  &lt;span class="mi"&gt;485&lt;/span&gt; &lt;span class="mf"&gt;521.7&lt;/span&gt;    &lt;span class="mi"&gt;404&lt;/span&gt;   &lt;span class="mi"&gt;10505&lt;/span&gt;
&lt;span class="n"&gt;Total:&lt;/span&gt;        &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mi"&gt;493&lt;/span&gt; &lt;span class="mf"&gt;522.3&lt;/span&gt;    &lt;span class="mi"&gt;412&lt;/span&gt;   &lt;span class="mi"&gt;10507&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Go + Martini&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;http:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost:3000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Concurrency&lt;/span&gt; &lt;span class="n"&gt;Level:&lt;/span&gt;      &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;taken&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tests:&lt;/span&gt;   &lt;span class="mf"&gt;48.284&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;
&lt;span class="n"&gt;Complete&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;      &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Write&lt;/span&gt; &lt;span class="n"&gt;errors:&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;      &lt;span class="mi"&gt;15700000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;HTML&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;       &lt;span class="mi"&gt;4100000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;Requests&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;second:&lt;/span&gt;    &lt;span class="mf"&gt;2071.08&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;48.284&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;0.483&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;concurrent&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;rate:&lt;/span&gt;          &lt;span class="mf"&gt;317.54&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Kbytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;

&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Times&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="n"&gt;min&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;+/-&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;   &lt;span class="n"&gt;max&lt;/span&gt;
&lt;span class="n"&gt;Connect:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.7&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="n"&gt;Processing:&lt;/span&gt;    &lt;span class="mi"&gt;13&lt;/span&gt;   &lt;span class="mi"&gt;47&lt;/span&gt;  &lt;span class="mf"&gt;12.0&lt;/span&gt;     &lt;span class="mi"&gt;47&lt;/span&gt;     &lt;span class="mi"&gt;105&lt;/span&gt;
&lt;span class="n"&gt;Waiting:&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mi"&gt;35&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;     &lt;span class="mi"&gt;34&lt;/span&gt;      &lt;span class="mi"&gt;99&lt;/span&gt;
&lt;span class="n"&gt;Total:&lt;/span&gt;         &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="mi"&gt;48&lt;/span&gt;  &lt;span class="mf"&gt;12.0&lt;/span&gt;     &lt;span class="mi"&gt;48&lt;/span&gt;     &lt;span class="mi"&gt;112&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Node + Express&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;ab&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;http:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;localhost:8080&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Concurrency&lt;/span&gt; &lt;span class="n"&gt;Level:&lt;/span&gt;      &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;taken&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tests:&lt;/span&gt;   &lt;span class="mf"&gt;59.962&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;
&lt;span class="n"&gt;Complete&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;      &lt;span class="mi"&gt;100000&lt;/span&gt;
&lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="n"&gt;requests:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Write&lt;/span&gt; &lt;span class="n"&gt;errors:&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;      &lt;span class="mi"&gt;20700000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;HTML&lt;/span&gt; &lt;span class="n"&gt;transferred:&lt;/span&gt;       &lt;span class="mi"&gt;3000000&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;
&lt;span class="n"&gt;Requests&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;second:&lt;/span&gt;    &lt;span class="mf"&gt;1667.72&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#/sec] (mean)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;59.962&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;request:&lt;/span&gt;       &lt;span class="mf"&gt;0.600&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;concurrent&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;rate:&lt;/span&gt;          &lt;span class="mf"&gt;337.13&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Kbytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;

&lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;Times&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="n"&gt;min&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;+/-&lt;/span&gt;&lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;   &lt;span class="n"&gt;max&lt;/span&gt;
&lt;span class="n"&gt;Connect:&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.5&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Processing:&lt;/span&gt;    &lt;span class="mi"&gt;26&lt;/span&gt;   &lt;span class="mi"&gt;59&lt;/span&gt;  &lt;span class="mf"&gt;11.2&lt;/span&gt;     &lt;span class="mi"&gt;59&lt;/span&gt;     &lt;span class="mi"&gt;168&lt;/span&gt;
&lt;span class="n"&gt;Waiting:&lt;/span&gt;       &lt;span class="mi"&gt;16&lt;/span&gt;   &lt;span class="mi"&gt;56&lt;/span&gt;  &lt;span class="mf"&gt;10.8&lt;/span&gt;     &lt;span class="mi"&gt;55&lt;/span&gt;     &lt;span class="mi"&gt;168&lt;/span&gt;
&lt;span class="n"&gt;Total:&lt;/span&gt;         &lt;span class="mi"&gt;26&lt;/span&gt;   &lt;span class="mi"&gt;60&lt;/span&gt;  &lt;span class="mf"&gt;11.1&lt;/span&gt;     &lt;span class="mi"&gt;59&lt;/span&gt;     &lt;span class="mi"&gt;171&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;总结：&lt;/h2&gt;
&lt;table class="table table-bordered table-striped table-condensed"&gt;
    &lt;tr&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt;avg(ms) &lt;/td&gt;
        &lt;td&gt;min(ms) &lt;/td&gt;
        &lt;td&gt;max(ms)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Flask(Python) &lt;/td&gt;
        &lt;td&gt;168 &lt;/td&gt;
        &lt;td&gt;26 &lt;/td&gt;
        &lt;td&gt;295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Sinatra(Ruby) &lt;/td&gt;
        &lt;td&gt;496 &lt;/td&gt;
        &lt;td&gt;180 &lt;/td&gt;
        &lt;td&gt;10507&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Martini(Go) &lt;/td&gt;
        &lt;td&gt;48 &lt;/td&gt;
        &lt;td&gt;14 &lt;/td&gt;
        &lt;td&gt;112&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Express(Node) &lt;/td&gt;
        &lt;td&gt;60 &lt;/td&gt;
        &lt;td&gt;26 &lt;/td&gt;
        &lt;td&gt;171&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;可见，&lt;a href="https://github.com/go-martini/martini"&gt;Matini&lt;/a&gt;(Golang)和&lt;a href="https://github.com/expressjs/express"&gt;Express&lt;/a&gt;(Node)性能优势比较明显，也在意料之中，&lt;a href="https://github.com/mitsuhiko/flask"&gt;Flask&lt;/a&gt;(Python)表现中规中矩，相较之下，&lt;a href="https://github.com/sinatra/sinatra"&gt;Sinatra&lt;/a&gt;(Ruby)的性能简直是没法忍（PS: 我不是Ruby黑）！感兴趣的亲们可以在自己的环境测试下。完。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;br /&gt;
&lt;a href="https://realpython.com/blog/python/python-ruby-and-golang-a-web-Service-application-comparison"&gt;https://realpython.com/blog/python/python-ruby-and-golang-a-web-Service-application-comparison/&lt;/a&gt;
&lt;a href="https://medium.com/@tschundeee/express-vs-flask-vs-go-acc0879c2122#.6katm1qn2"&gt;https://medium.com/@tschundeee/express-vs-flask-vs-go-acc0879c2122#.6katm1qn2&lt;/a&gt;&lt;/p&gt;</summary><category term="Flask"></category><category term="Sinatra"></category><category term="Martini"></category><category term="Express"></category><category term="Performance"></category></entry></feed>